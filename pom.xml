<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">	
	<modelVersion>4.0.0</modelVersion>
	
    <groupId>com.zhaile</groupId>
    <artifactId>zhaile.parent</artifactId>
    <name>zhaile</name>
    <packaging>pom</packaging>  
    <version>1.8</version>
    
	<properties>
        <java.version>1.6</java.version>
		<slf4j.version>1.7.5</slf4j.version>
		<commons.logging.version>1.1.3</commons.logging.version>
		<logback.version>1.0.13</logback.version>
		<ibatis.version>2.3.4.726</ibatis.version>
		<mysql.version>5.1.27</mysql.version>
		<guava.version>15.0</guava.version>
        <java.encoding>UTF-8</java.encoding>
        <webx-version>3.2.3</webx-version>
        <spring-version>3.2.4.RELEASE</spring-version>
        <springext-plugin-version>1.2</springext-plugin-version>
        <!--<jetty-version>8.1.13.v20130916</jetty-version>-->
        <project.build.sourceEncoding>${java.encoding}</project.build.sourceEncoding>
        <productionMode>false</productionMode>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.build.timestamp.format>yyyy-MM-dd_HH_mm</maven.build.timestamp.format>
    </properties>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.apache.ibatis</groupId>
				<artifactId>ibatis-sqlmap</artifactId>
				<version>${ibatis.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.version}</version>
			</dependency>
			<!-- ================================================= -->
			<!-- 日志及相关依赖（用slf4j+logback代替jcl+log4j）    -->
			<!-- ================================================= -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<!-- 将现有的jakarta commons logging的调用转换成lsf4j的调用。 -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<!-- Hack：确保commons-logging的jar包不被引入，否则将和jcl-over-slf4j冲突 -->
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>${commons.logging.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- slf4j的实现：logback，用来取代log4j。更快、更强！ -->
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
				<scope>runtime</scope>
			</dependency>
            <!-- ================================================= -->
            <!-- Webx框架依赖 -->
            <!-- ================================================= -->
            <dependency>
                <groupId>com.alibaba.citrus</groupId>
                <artifactId>citrus-webx-all</artifactId>
                <version>${webx-version}</version>
            </dependency>
            <!-- ================================================= -->
            <!-- Spring框架 -->
            <!-- ================================================= -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${spring-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${spring-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${spring-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>${spring-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring-version}</version>
            </dependency>
            <!-- ================================================= -->
            <!-- 单元测试 -->
            <!-- ================================================= 
            <dependency>
                <groupId>com.alibaba.citrus</groupId>
                <artifactId>citrus-test-all</artifactId>
                <version>${webx-version}</version>
                <scope>test</scope>
            </dependency>-->
            <!-- ======================================== -->
            <!-- 其它第三方依赖 -->
            <!-- ======================================== -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>3.1.0</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity</artifactId>
                <version>1.7</version>
            </dependency>
            <dependency>
                <groupId>org.freemarker</groupId>
                <artifactId>freemarker</artifactId>
                <version>2.3.20</version>
            </dependency>
			<dependency>
				<groupId>com.belerweb</groupId>
				<artifactId>pinyin4j</artifactId>
				<version>2.5.0</version>
			</dependency>
			<dependency>
				<groupId>QRCode</groupId>
				<artifactId>QRCode</artifactId>
				<version>3.0</version>
			</dependency> 
			<dependency>
				<groupId>gexin-rp-sdk</groupId>
				<artifactId>gexin-rp-sdk-base</artifactId>
				<version>2.0.0.18</version>
			</dependency> 
			<dependency>
				<groupId>gexin-rp-sdk</groupId>
				<artifactId>gexin-rp-sdk-http</artifactId>
				<version>3.0.0.7</version>
			</dependency> 
			<dependency>
				<groupId>gexin-rp-sdk</groupId>
				<artifactId>gexin-rp-sdk-template</artifactId>
				<version>2.0.0.7</version>
			</dependency> 
			<dependency>
				<groupId>jackson</groupId>
				<artifactId>jackson-all</artifactId>
				<version>1.8.5</version>
			</dependency> 
			<dependency>
				<groupId>protobuf</groupId>
				<artifactId>protobuf-java</artifactId>
				<version>2.5.0</version>
			</dependency> 
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.2</version>
			</dependency>
			<dependency>
				<groupId>commons-httpclient</groupId>
				<artifactId>commons-httpclient</artifactId>
				<version>3.0.1</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<pluginManagement>
            <plugins>
				<plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <plugin>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.7</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-eclipse-plugin</artifactId>
                    <version>2.9</version>
                </plugin>
                <plugin>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.2.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.9.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.16</version>
                </plugin>
                <!--<plugin>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>jetty-maven-plugin</artifactId>
                    <version>${jetty-version}</version>
                </plugin>-->
                <plugin>
                    <groupId>com.alibaba.citrus.tool</groupId>
                    <artifactId>springext-maven-plugin</artifactId>
                    <version>${springext-plugin-version}</version>
                </plugin>
                <!--
                    - This plugin's configuration is used to store Eclipse m2e settings only.
                    - It has no influence on the Maven build itself.
                -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-antrun-plugin</artifactId>
                                        <versionRange>[1.0,)</versionRange>
                                        <goals>
                                            <goal>run</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
	</build>
	<modules>
        <module>./zhaile.app.web</module>
		<module>./zhaile.app.biz</module>
        <module>./zhaile.app.searchEngine</module>
		<module>./zhaile.app.dal</module>
		<module>./zhaile.app.framework</module>
	</modules>
</project>